{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Formando\\\\Desktop\\\\chat\\\\chat\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Chat({\n  user\n}) {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/\");\n    }\n    fetch(`/api/messages/${user}`).then(response => response.json()).then(data => {\n      setList(data.messages);\n    }).catch(error => console.error(\"Error fetching messages:\", error));\n  }, [user]);\n\n  //STATE\n  const [list, setList] = useState([]);\n  const [friend, setFriend] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  console.log(list);\n  console.log(friend);\n  console.log(message);\n\n  //HANDLERS\n  const handleClick = clUser => {\n    setFriend(clUser);\n  };\n  const handleMessageChange = e => {\n    setMessage(e.target.value);\n  };\n  const handleMessageSubmit = e => {\n    e.preventDefault();\n    if (!friend || !message) {\n      return;\n    }\n    const newMessage = {\n      from: user,\n      to: friend,\n      content: message,\n      dateInMs: Date.now()\n    };\n    fetch(`/api/messages/${user}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newMessage)\n    }).then(response => response.json()).then(data => {\n      // Assuming the server returns the updated messages\n      setList(data.messages);\n    }).catch(error => console.error(\"Error sending message:\", error));\n    setMessage(\"\");\n  };\n\n  //LISTS\n\n  const relevantMessages = list.filter(message => message.from === user || message.to === user);\n  const uniqueUsers = [...new Set(relevantMessages.map(message => message.from !== user ? message.from : message.to))];\n  const renderedUsers = uniqueUsers.map((userName, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleClick(userName),\n      className: \"border h-20\",\n      children: userName\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this);\n  });\n  const filteredList = list.filter(element => element.from === user && element.to === friend || element.from === friend && element.to === user);\n  const renderedFilteredList = filteredList.map((element, index) => {\n    const isUserMessage = element.from === user;\n    const messageClass = isUserMessage ? 'bg-green-500 ml-auto' : 'bg-gray-500 mr-auto';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `rounded-lg p-2 mb-2 max-w-md ${messageClass}`,\n      children: element.content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this);\n  });\n\n  /* const renderedMessages = list.map((element, index) => {\r\n      const isUserMessage = element.from === user;\r\n      const messageClass = isUserMessage ? 'bg-green-500 ml-auto' : 'bg-gray-500 mr-auto';\r\n      \r\n      return (\r\n          <div key={index} className={`rounded-lg p-2 mb-2 max-w-md ${messageClass}`}>\r\n              {element.content}\r\n          </div>\r\n      );\r\n  }); */\n\n  /* const renderedMessages = list.map((element) => {\r\n    return <div>{element.content}</div>\r\n  });\r\n  \r\n  const renderedFriendMessages = list.map((message) => {\r\n    return <div>{message.content}</div>\r\n  }) */\n\n  /*  const renderedList = list.map((message, index) => (\r\n        <div key={index}>\r\n            <p>From: {message.from}</p>\r\n            <p>To: {message.to}</p>\r\n            <p>Content: {message.content}</p>\r\n            <p>Date: {new Date(message.dateInMs).toLocaleString()}</p>\r\n            <hr />\r\n        </div>\r\n    )); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-slate-500 h-screen flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-black h-screen w-1/3\",\n      children: renderedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-black h-screen w-2/3 text-white\",\n      children: [renderedFilteredList, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleMessageSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"w-full relative b-0 text-black px-4 py-2\",\n            onChange: handleMessageChange,\n            value: message,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"F0X3QAmAStzX/ZrTAUKiAJHy5Xo=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Chat","user","_s","navigate","fetch","then","response","json","data","setList","messages","catch","error","console","list","friend","setFriend","message","setMessage","log","handleClick","clUser","handleMessageChange","e","target","value","handleMessageSubmit","preventDefault","newMessage","from","to","content","dateInMs","Date","now","method","headers","body","JSON","stringify","relevantMessages","filter","uniqueUsers","Set","map","renderedUsers","userName","i","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredList","element","renderedFilteredList","index","isUserMessage","messageClass","onSubmit","onChange","type","_c","$RefreshReg$"],"sources":["C:/Users/Formando/Desktop/chat/chat/src/pages/Chat.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport function Chat({ user }) {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/\");\r\n    }\r\n\r\n    fetch(`/api/messages/${user}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setList(data.messages);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching messages:\", error));\r\n  }, [user]);\r\n\r\n  //STATE\r\n  const [list, setList] = useState([]);\r\n  const [friend, setFriend] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  console.log(list);\r\n  console.log(friend);\r\n  console.log(message);\r\n\r\n  //HANDLERS\r\n  const handleClick = (clUser) => {\r\n    setFriend(clUser);\r\n  };\r\n\r\n  const handleMessageChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleMessageSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!friend || !message) {\r\n      return;\r\n    }\r\n\r\n    const newMessage = {\r\n      from: user,\r\n      to: friend,\r\n      content: message,\r\n      dateInMs: Date.now(),\r\n    };\r\n\r\n    fetch(`/api/messages/${user}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newMessage),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Assuming the server returns the updated messages\r\n        setList(data.messages);\r\n      })\r\n      .catch((error) => console.error(\"Error sending message:\", error));\r\n\r\n    setMessage(\"\");\r\n  };\r\n\r\n  //LISTS\r\n  \r\nconst relevantMessages = list.filter(message => message.from === user || message.to === user);\r\n\r\n\r\nconst uniqueUsers = [...new Set(relevantMessages.map(message => message.from !== user ? message.from : message.to))];\r\n\r\n\r\nconst renderedUsers = uniqueUsers.map((userName, i) => {\r\n  return (\r\n    <div key={i} onClick={() => handleClick(userName)} className=\"border h-20\">\r\n      {userName}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst filteredList = list.filter(element => (\r\n    (element.from === user && element.to === friend) || \r\n    (element.from === friend && element.to === user)\r\n));\r\n\r\nconst renderedFilteredList = filteredList.map((element,index) => {\r\n\r\n    const isUserMessage = element.from === user;\r\n    const messageClass = isUserMessage ? 'bg-green-500 ml-auto' : 'bg-gray-500 mr-auto';\r\n\r\n\r\n\r\n    return (\r\n        <div key={index} className={`rounded-lg p-2 mb-2 max-w-md ${messageClass}`}>\r\n            {element.content}\r\n        </div>\r\n    );\r\n})\r\n\r\n/* const renderedMessages = list.map((element, index) => {\r\n    const isUserMessage = element.from === user;\r\n    const messageClass = isUserMessage ? 'bg-green-500 ml-auto' : 'bg-gray-500 mr-auto';\r\n    \r\n    return (\r\n        <div key={index} className={`rounded-lg p-2 mb-2 max-w-md ${messageClass}`}>\r\n            {element.content}\r\n        </div>\r\n    );\r\n}); */\r\n\r\n\r\n\r\n  /* const renderedMessages = list.map((element) => {\r\n    return <div>{element.content}</div>\r\n  });\r\n\r\n\r\n  const renderedFriendMessages = list.map((message) => {\r\n    return <div>{message.content}</div>\r\n}) */\r\n\r\n  /*  const renderedList = list.map((message, index) => (\r\n        <div key={index}>\r\n            <p>From: {message.from}</p>\r\n            <p>To: {message.to}</p>\r\n            <p>Content: {message.content}</p>\r\n            <p>Date: {new Date(message.dateInMs).toLocaleString()}</p>\r\n            <hr />\r\n        </div>\r\n    )); */\r\n\r\n  return (\r\n    <div className=\"bg-slate-500 h-screen flex\">\r\n      <div className=\"border border-black h-screen w-1/3\">{renderedUsers}</div>\r\n      <div className=\"border border-black h-screen w-2/3 text-white\">\r\n        {/* {renderedMessages}\r\n        {renderedFriendMessages} */}\r\n        {renderedFilteredList}\r\n        \r\n    \r\n        <div className=\"\">\r\n          <form onSubmit={handleMessageSubmit}>\r\n            <input className=\"w-full relative b-0 text-black px-4 py-2\" onChange={handleMessageChange} value={message} type=\"text\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}