{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Formando\\\\Desktop\\\\chat\\\\chat\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Chat({\n  user\n}) {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/\");\n    }\n    fetch(`/api/messages/${user}`).then(response => response.json()).then(data => {\n      setList(data.messages);\n    }).catch(error => console.error('Error fetching messages:', error));\n  }, [user]);\n  const [list, setList] = useState([]);\n  const [friend, setFriend] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  console.log(list);\n  console.log(friend);\n  console.log(message);\n  const handleClick = clUser => {\n    setFriend(clUser);\n  };\n  const handleMessageChange = e => {\n    setMessage(e.target.value);\n  };\n  const handleMessageSubmit = e => {\n    e.preventDefault();\n    if (!friend || !message) {\n      return;\n    }\n    const newMessage = {\n      from: user,\n      to: friend,\n      content: message,\n      dateInMs: Date.now()\n    };\n    fetch(`/api/messages/${user}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newMessage)\n    }).then(response => response.json()).then(data => {\n      // Assuming the server returns the updated messages\n      setList(data.messages);\n    }).catch(error => console.error(\"Error sending message:\", error));\n    setMessage(\"\");\n  };\n\n  //LISTS\n  const renderedUsers = list.map((user, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleClick(user.to),\n      className: \"border h-20\",\n      children: user.to\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this);\n  });\n  const renderedMessages = list.map(element => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: element.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  });\n\n  /*  const renderedList = list.map((message, index) => (\r\n       <div key={index}>\r\n           <p>From: {message.from}</p>\r\n           <p>To: {message.to}</p>\r\n           <p>Content: {message.content}</p>\r\n           <p>Date: {new Date(message.dateInMs).toLocaleString()}</p>\r\n           <hr />\r\n       </div>\r\n   )); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-slate-500 h-screen flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-black h-screen w-1/3\",\n      children: renderedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-black h-screen w-2/3\",\n      children: [renderedMessages, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleMessageSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleMessageChange,\n            value: message,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"ogG9Lv/WIVpPHgy7CpvB47sIZWo=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Chat","user","_s","navigate","fetch","then","response","json","data","setList","messages","catch","error","console","list","friend","setFriend","message","setMessage","log","handleClick","clUser","handleMessageChange","e","target","value","handleMessageSubmit","preventDefault","newMessage","from","to","content","dateInMs","Date","now","method","headers","body","JSON","stringify","renderedUsers","map","i","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderedMessages","element","onSubmit","onChange","type","_c","$RefreshReg$"],"sources":["C:/Users/Formando/Desktop/chat/chat/src/pages/Chat.js"],"sourcesContent":["import { useState,useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport function Chat ({user}) {\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n\r\n        if(!user) {\r\n            navigate(\"/\")\r\n        }\r\n\r\n        fetch(`/api/messages/${user}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setList(data.messages);\r\n            })\r\n            .catch(error => console.error('Error fetching messages:', error));\r\n    }, [user]); \r\n\r\n    \r\n\r\n    const [list,setList] = useState([])\r\n    const [friend,setFriend] = useState(\"\")\r\n    const [message,setMessage] = useState(\"\")\r\n    console.log(list)\r\n    console.log(friend)\r\n    console.log(message)\r\n    \r\n\r\n    const handleClick = (clUser) => {\r\n        setFriend(clUser)\r\n    }\r\n\r\n    const handleMessageChange = (e) => {\r\n        setMessage(e.target.value)\r\n    }\r\n\r\n    const handleMessageSubmit = (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (!friend || !message) {\r\n          return;\r\n        }\r\n    \r\n        const newMessage = {\r\n          from: user,\r\n          to: friend,\r\n          content: message,\r\n          dateInMs: Date.now(),\r\n        };\r\n    \r\n        fetch(`/api/messages/${user}`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(newMessage),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            // Assuming the server returns the updated messages\r\n            setList(data.messages);\r\n          })\r\n          .catch((error) => console.error(\"Error sending message:\", error));\r\n    \r\n        setMessage(\"\");\r\n      };\r\n\r\n\r\n\r\n    //LISTS\r\n    const renderedUsers = list.map((user,i) => {\r\n        return <div key={i} onClick={() => handleClick(user.to)} className=\"border h-20\">{user.to}</div>\r\n    })\r\n    const renderedMessages = list.map((element) => {\r\n        return <div>{element.content}</div>\r\n    })\r\n\r\n   /*  const renderedList = list.map((message, index) => (\r\n        <div key={index}>\r\n            <p>From: {message.from}</p>\r\n            <p>To: {message.to}</p>\r\n            <p>Content: {message.content}</p>\r\n            <p>Date: {new Date(message.dateInMs).toLocaleString()}</p>\r\n            <hr />\r\n        </div>\r\n    )); */\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n    <div className=\"bg-slate-500 h-screen flex\">\r\n        <div className=\"border border-black h-screen w-1/3\">\r\n            {renderedUsers}\r\n        </div>\r\n        <div className=\"border border-black h-screen w-2/3\">  \r\n        {renderedMessages}\r\n        <div className=\"\">\r\n        <form onSubmit={handleMessageSubmit}>\r\n            <input onChange={handleMessageChange} value={message} type=\"text\"/>\r\n        </form>\r\n\r\n        </div>\r\n        </div>\r\n    </div>\r\n        )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}